import asyncio
from datetime import datetime, timedelta
import logging
import os 

from aiogram import Router, F, types
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, InputFile, ReplyKeyboardMarkup, KeyboardButton, FSInputFile   
from aiogram.filters import Command, CommandObject, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.strategy import FSMStrategy
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import StateFilter
from aiogram.types import ChatMemberUpdated

from filters import IsPrivate
from loader import bot
from data import config
from database.repo.requests import RequestsRepo
from utils import keyboards, texts

from clients.giveaway import send_giveaway_message

logger = logging.getLogger(__name__)

router = Router()

EMOJI_STATUS = {
    "active": "üü¢",
    "block": "üî¥",
    "wait_start": "‚è≥",
    "winners_selection": "üèÜ",
    "finished": "‚úÖ"
}

TEXT_STATUS = {
    "active": "üü¢ –ê–∫—Ç–∏–≤–Ω—ã–π",
    "block": "üî¥ –ë–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
    "wait_start": "‚è≥ –û–∂–∏–¥–∞–µ—Ç –Ω–∞—á–∞–ª–∞",
    "winners_selection": "üèÜ –í—ã–±–æ—Ä –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π",
    "finished": "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω"
}

@router.message(F.text == "üìä –ú–æ–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∏", IsPrivate())
async def command_start(message: Message, repo: RequestsRepo, state: FSMContext):
    if await state.get_state() is not None:
        await state.clear()
        
    giveaways = await repo.giveaways.get_giveaways_by_admin_id(message.from_user.id)
    
    if not giveaways:
        await message.answer("üéÅ –£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π")
        return

    buttons = []
    for giveaway in giveaways:
        buttons.append([InlineKeyboardButton(text=f"{EMOJI_STATUS[giveaway.status]} {giveaway.id}", callback_data=f"giveaway_view:{giveaway.id}")])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await message.answer("üéÅ –ú–æ–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∏", reply_markup=keyboard)
    

@router.callback_query(F.data.startswith("giveaway_view:"), IsPrivate())        
async def giveaway_view(callback: CallbackQuery, state: FSMContext, repo: RequestsRepo):        
    giveaway_id = callback.data.split(":")[1]
    giveaway = await repo.giveaways.get_giveaway_by_id_and_admin_id(giveaway_id, callback.from_user.id)
    
    if not giveaway:
        await callback.answer("üéÅ –†–æ–∑—ã–≥—Ä—ã—à –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    await send_giveaway_message(giveaway, callback.from_user.id)
    
    keyboard = InlineKeyboardMarkup()
    buttons = []
    
    if giveaway.status == "active":
        buttons.append([InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–æ–∑—ã–≥—Ä—ã—à—É", url=f"{giveaway.view_details.get('url_to_giveaway')}")])
        buttons.append([InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏–µ", callback_data=f"giveaway_edit_condition:{giveaway.id}")])
    elif giveaway.status == "wait_start":
        buttons.append([InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏–µ", callback_data=f"giveaway_edit_condition:{giveaway.id}")])
    else:
        buttons.append([InlineKeyboardButton(text="–í—ã–≥—Ä—É–∑–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", callback_data=f"giveaway_export_participants:{giveaway.id}")])
        buttons.append([InlineKeyboardButton(text="–í—ã–±—Ä–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π", callback_data=f"giveaway_select_winners:{giveaway.id}")])

    buttons.append([InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à", callback_data=f"giveaway_delete:{giveaway.id}")])
    
    await callback.message.answer(f"üéÅ <b>–†–æ–∑—ã–≥—Ä—ã—à #{giveaway.id}</b>\n\n"
                                  f"üîπ –°—Ç–∞—Ç—É—Å: {TEXT_STATUS[giveaway.status]}\n"
                                  f"üîπ –ù–∞—á–∞–ª–æ: {giveaway.start_at}\n"
                                  f"üîπ –û–∫–æ–Ω—á–∞–Ω–∏–µ: {giveaway.ends_at}\n"
                                  f"üîπ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π: {giveaway.count_winners}\n"
                                  f"üîπ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {giveaway.count_participants}\n", reply_markup=keyboard)
    